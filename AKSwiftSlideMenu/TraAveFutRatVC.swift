//
//  TraAveFutRatVC.swift
//  MortgageAssistance&LearningTool
//
//  Created by Chris Bodger on 27/01/2017.
//

import UIKit

class TraAveFutRatVC: BaseViewController {
    
    @IBAction func goBackButton(_ sender: Any) {
    
        self.dismiss(animated: true)
    
    }

    
    override func viewDidLoad() {
        super.viewDidLoad()
        addSlideMenuButton()
        // Do any additional setup after loading the view.
        
        
        
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    
    /*
     // MARK: - Navigation
     
     // In a storyboard-based application, you will often want to do a little preparation before navigation
     override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
     // Get the new view controller using segue.destinationViewController.
     // Pass the selected object to the new view controller.
     }
     */
   
    @IBOutlet weak var variableLoanAmount3: UITextField!
    @IBOutlet weak var valueReturn3: UITextField!

    
    func letsDoThis3(z: Float) -> Float {
        
        
        var t = 241
        
        var T_1 = [Int]()
        
        // Create Array from 0 to 240, and return a to zero on completion
        for a in 0...t {
            T_1.append(a)
        }
        
        
        var interest = [Float](arrayLiteral
        
        // Create function to calculate principal, repayments and interest paid on a cumulative monthly basis
        
        func variablerate3(P: inout Float, t: Int) -> Float? {
            var principal = [Float]()
            var i_paid = [Float]()
            i_paid.append(0)
            var repayments = [Float]()
            var R = Float(0)
            
            for a in 1...t-1 {
                P = P - R
                R = (P*interest[a])/(1-pow(1+interest[a],-Float(interest.count-a)))
                repayments.append(R)
                principal.append(P)
                let ip = P*(interest[a-1])
                i_paid.append(i_paid[a-1] + ip)
                P = P*(1+interest[a])
            }
            
            let cc = repayments.max()
            return cc
            
            
        }
        var u = Float(z)
        let dd = variablerate3(P: &u, t: 240)!
        return dd
    }
    

    @IBAction func calculateButton3(_ sender: Any) {
    
    
        let x = (variableLoanAmount3.text as! NSString).doubleValue
        
        let y = letsDoThis3(z: Float(x))
        let z = String(format: "%.2f", y)
        
        valueReturn3.text = "\(z)"
    
    }
    
}
